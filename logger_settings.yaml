version: 1
disable_existing_loggers: true

formatters:
    json_standard:
        format: "%(message)s"
        class: json_logging.JSONLogFormatter
    json_error:
        format: "%(levelname)s"
        class: json_logging.JSONLogFormatter
    standard:
        format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    error:
        format: "%(levelname)s <PID %(process)d:%(processName)s> %(name)s.%(funcName)s(): %(message)s"

handlers:
    console:
        class: logging.StreamHandler
        level: DEBUG
        formatter: standard
        stream: ext://sys.stdout

    info_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: INFO
        formatter: json_standard
        filename: data/application_log/info.log
        maxBytes: 10_485_760 # 10MB
        backupCount: 20
        encoding: utf8

    error_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: ERROR
        formatter: json_error
        filename: data/application_log/errors.log
        maxBytes: 10_485_760 # 10MB
        backupCount: 20
        encoding: utf8

    debug_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: DEBUG
        formatter: json_standard
        filename: data/application_log/debug.log
        maxBytes: 10_485_760 # 10MB
        backupCount: 20
        encoding: utf8

    critical_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: CRITICAL
        formatter: json_standard
        filename: data/application_log/critical.log
        maxBytes: 10_485_760 # 10MB
        backupCount: 20
        encoding: utf8

    warn_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: WARN
        formatter: json_standard
        filename: data/application_log/warn.log
        maxBytes: 10_485_760 # 10MB
        backupCount: 20
        encoding: utf8

root:
    level: NOTSET
    handlers: [info_file_handler, error_file_handler, debug_file_handler, critical_file_handler,
               warn_file_handler]
    propagate: yes


loggers:
    <module>:
        level: INFO
        handlers: [info_file_handler, error_file_handler, critical_file_handler, debug_file_handler,
                   warn_file_handler]
        propagate: no
